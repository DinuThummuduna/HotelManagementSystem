/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package coursework2.hotel.mvc.view;
import coursework2.hotel.mvc.controller.CustomerController;
import coursework2.hotel.mvc.dto.CustomerDto;
import coursework2.hotel.mvc.dto.ReservationDto;
import coursework2.hotel.mvc.controller.ReservationController;
import coursework2.hotel.mvc.db.DBConnection;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;
/**

/**
 *
 * @author User
 */
public class ReservationView extends javax.swing.JFrame {
private CustomerController customerController = new CustomerController();
private ReservationController reservationController = new ReservationController();
    /**
     * Creates new form ReservationView
     */
    public ReservationView() {
        initComponents();
        loadReservation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        customerIdlbl = new javax.swing.JLabel();
        reservationDatelbl = new javax.swing.JLabel();
        ckeckInDatelbl = new javax.swing.JLabel();
        ckeckOutDatelbl = new javax.swing.JLabel();
        customerIdtxt = new javax.swing.JTextField();
        reservationDatetxt = new javax.swing.JTextField();
        checkInDatetxt = new javax.swing.JTextField();
        checkOutDatetxt = new javax.swing.JTextField();
        customerDetaillbl = new javax.swing.JLabel();
        searchCustBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationDetailtbl = new javax.swing.JTable();
        saveBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        NoOfDaysStaylbl = new javax.swing.JLabel();
        NoOfDaystxt = new javax.swing.JTextField();
        reservationAmountlbl = new javax.swing.JLabel();
        reservationAmounttxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Royal Hotel Villa");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 0, 204));
        jLabel2.setText("Reservation");

        customerIdlbl.setText("Customer Id");

        reservationDatelbl.setText("Reservation Date");

        ckeckInDatelbl.setText("Check In Date");

        ckeckOutDatelbl.setText("Check Out Date");

        customerDetaillbl.setText("jLabel9");

        searchCustBtn.setText("Search Customer");
        searchCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustBtnActionPerformed(evt);
            }
        });

        reservationDetailtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(reservationDetailtbl);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        NoOfDaysStaylbl.setText("No Of Days Stay");

        reservationAmountlbl.setText("Reservation Amount");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NoOfDaysStaylbl)
                                        .addGap(18, 18, 18)
                                        .addComponent(NoOfDaystxt, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(customerIdlbl)
                                            .addGap(41, 41, 41)
                                            .addComponent(customerIdtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(reservationDatelbl)
                                                .addComponent(ckeckInDatelbl))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(checkInDatetxt, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                                .addComponent(reservationDatetxt)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(saveBtn)
                                            .addGap(42, 42, 42))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(searchCustBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(customerDetaillbl, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(reservationAmountlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ckeckOutDatelbl))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(reservationAmounttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                                            .addComponent(checkOutDatetxt)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addComponent(deleteBtn)))))
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerIdlbl)
                    .addComponent(customerIdtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerDetaillbl)
                    .addComponent(searchCustBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationDatelbl)
                    .addComponent(reservationDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckeckInDatelbl)
                    .addComponent(checkInDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ckeckOutDatelbl)
                    .addComponent(checkOutDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NoOfDaysStaylbl)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NoOfDaystxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reservationAmountlbl)
                        .addComponent(reservationAmounttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(deleteBtn))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        saveReservation();
// TODO add your handling code here:
    }//GEN-LAST:event_saveBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        deleteReservation();
// TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void searchCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustBtnActionPerformed
        searchCustomer();
// TODO add your handling code here:
    }//GEN-LAST:event_searchCustBtnActionPerformed

    /**
     * @param args the command line arguments
     */
  //  public static void main(String args[]) {
   //     /* Set the Nimbus look and feel */
   //     //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
   //     /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
   //      * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
   //      */
   //     try {
   //         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
   //             if ("Nimbus".equals(info.getName())) {
   //                 javax.swing.UIManager.setLookAndFeel(info.getClassName());
   //                 break;
   //             }
   //         }
   //     } catch (ClassNotFoundException ex) {
   //         java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
   //     } catch (InstantiationException ex) {
   //         java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //    } catch (IllegalAccessException ex) {
    //        java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
   //         java.util.logging.Logger.getLogger(ReservationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
   //     }
        //</editor-fold>

        /* Create and display the form */
    //    java.awt.EventQueue.invokeLater(new Runnable() {
    //        public void run() {
    //            new ReservationView().setVisible(true);
   //         }
   //     });
  //  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NoOfDaysStaylbl;
    private javax.swing.JTextField NoOfDaystxt;
    private javax.swing.JTextField checkInDatetxt;
    private javax.swing.JTextField checkOutDatetxt;
    private javax.swing.JLabel ckeckInDatelbl;
    private javax.swing.JLabel ckeckOutDatelbl;
    private javax.swing.JLabel customerDetaillbl;
    private javax.swing.JLabel customerIdlbl;
    private javax.swing.JTextField customerIdtxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel reservationAmountlbl;
    private javax.swing.JTextField reservationAmounttxt;
    private javax.swing.JLabel reservationDatelbl;
    private javax.swing.JTextField reservationDatetxt;
    private javax.swing.JTable reservationDetailtbl;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchCustBtn;
    // End of variables declaration//GEN-END:variables


    private void loadReservation(){
        try {
            String columns[] = {"Customer Id", "Name", "Reservation Date", "Check In Time", "Check Out Time", "No of Days Stay", "Amount for Reservation"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            reservationDetailtbl.setModel(dtm);

            ArrayList<ReservationDto> reservationDtos = reservationController.getAllReservation();

            for (ReservationDto reservationDto : reservationDtos) {
                Object[] rowData = {reservationDto.getCustomerId(), reservationDto.getName(),
                        reservationDto.getReservationDate(), reservationDto.getCheckInDate(),
                        reservationDto.getCheckOutDate(), reservationDto.getNoOfDaysStay(), reservationDto.getReservationAmount()};
                dtm.addRow(rowData);
            }

        } catch (Exception ex) {
            Logger.getLogger(ReservationView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private void searchCustomer(){
   try {
            String customerId = customerIdtxt.getText();
           CustomerDto customerDto = customerController.searchCustomer(customerId);
            if(customerDto != null){
                customerDetaillbl.setText(customerDto.getFirstName()+ " "+ customerDto.getLastName());
            }else {
                JOptionPane.showMessageDialog(this, "Customer Not Found");
            }
            
        } catch (Exception ex) {
            Logger.getLogger(PackageView.class.getName()).log(Level.SEVERE, null, ex);
        }
}

private void saveReservation(){
     ReservationDto dto = new ReservationDto();
    dto.setCustomerId(customerIdtxt.getText());
    dto.setName(customerDetaillbl.getText());

    try {
        String dateString = reservationDatetxt.getText();
        Timestamp reservationDate = Timestamp.valueOf(dateString);
        dto.setReservationDate(reservationDate);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Invalid Reservation Date");
        return;
    }

    dto.setCheckInDate(checkInDatetxt.getText());
    dto.setCheckOutDate(checkOutDatetxt.getText());
    dto.setNoOfDaysStay(NoOfDaystxt.getText());
    dto.setReservationAmount(reservationAmounttxt.getText());

    try {
        String result = reservationController.saveReservation(dto);
        System.out.println(result);
        JOptionPane.showMessageDialog(this, result);
        loadReservation();  // Reload the table after saving
        clearReservationFields();  // Clear input fields after saving
    } catch (Exception ex) {
        System.out.println(ex.getMessage());
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }
    }


private void deleteReservation() {
    try {
            String customerId = customerIdtxt.getText();
            reservationController.deleteReservation(customerId);
            JOptionPane.showMessageDialog(this, "Reservation deleted successfully.");

            clearReservationFields();
            loadReservation();
        } catch (Exception ex) {
            Logger.getLogger(PackageView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

private void clearReservationFields() {
        customerIdtxt.setText("");
        reservationDatetxt.setText("");
        checkInDatetxt.setText("");
        checkOutDatetxt.setText("");
        NoOfDaystxt.setText("");
        reservationAmounttxt.setText("");
        customerDetaillbl.setText("");
    }
}